// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sum.proto

package sum

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	Id                   uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Info                 *ServerInfo `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{0}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetInfo() *ServerInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type NodeResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Nodes                []*Node  `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeResponse) Reset()         { *m = NodeResponse{} }
func (m *NodeResponse) String() string { return proto.CompactTextString(m) }
func (*NodeResponse) ProtoMessage()    {}
func (*NodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{1}
}

func (m *NodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeResponse.Unmarshal(m, b)
}
func (m *NodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeResponse.Marshal(b, m, deterministic)
}
func (m *NodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeResponse.Merge(m, src)
}
func (m *NodeResponse) XXX_Size() int {
	return xxx_messageInfo_NodeResponse.Size(m)
}
func (m *NodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeResponse proto.InternalMessageInfo

func (m *NodeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *NodeResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *NodeResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Record struct {
	Id                   uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []float32         `protobuf:"fixed32,2,rep,packed,name=data,proto3" json:"data,omitempty"`
	Meta                 map[string]string `protobuf:"bytes,3,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{2}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Record) GetData() []float32 {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Record) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

type RecordResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Record               *Record  `protobuf:"bytes,3,opt,name=record,proto3" json:"record,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordResponse) Reset()         { *m = RecordResponse{} }
func (m *RecordResponse) String() string { return proto.CompactTextString(m) }
func (*RecordResponse) ProtoMessage()    {}
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{3}
}

func (m *RecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordResponse.Unmarshal(m, b)
}
func (m *RecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordResponse.Marshal(b, m, deterministic)
}
func (m *RecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordResponse.Merge(m, src)
}
func (m *RecordResponse) XXX_Size() int {
	return xxx_messageInfo_RecordResponse.Size(m)
}
func (m *RecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecordResponse proto.InternalMessageInfo

func (m *RecordResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RecordResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RecordResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type ListRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage              uint64   `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{4}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListRequest) GetPerPage() uint64 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

type RecordListResponse struct {
	Total                uint64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Pages                uint64    `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Records              []*Record `protobuf:"bytes,3,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RecordListResponse) Reset()         { *m = RecordListResponse{} }
func (m *RecordListResponse) String() string { return proto.CompactTextString(m) }
func (*RecordListResponse) ProtoMessage()    {}
func (*RecordListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{5}
}

func (m *RecordListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordListResponse.Unmarshal(m, b)
}
func (m *RecordListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordListResponse.Marshal(b, m, deterministic)
}
func (m *RecordListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordListResponse.Merge(m, src)
}
func (m *RecordListResponse) XXX_Size() int {
	return xxx_messageInfo_RecordListResponse.Size(m)
}
func (m *RecordListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecordListResponse proto.InternalMessageInfo

func (m *RecordListResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *RecordListResponse) GetPages() uint64 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *RecordListResponse) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

type OracleListResponse struct {
	Total                uint64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Pages                uint64    `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Oracles              []*Oracle `protobuf:"bytes,3,rep,name=oracles,proto3" json:"oracles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OracleListResponse) Reset()         { *m = OracleListResponse{} }
func (m *OracleListResponse) String() string { return proto.CompactTextString(m) }
func (*OracleListResponse) ProtoMessage()    {}
func (*OracleListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{6}
}

func (m *OracleListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OracleListResponse.Unmarshal(m, b)
}
func (m *OracleListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OracleListResponse.Marshal(b, m, deterministic)
}
func (m *OracleListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OracleListResponse.Merge(m, src)
}
func (m *OracleListResponse) XXX_Size() int {
	return xxx_messageInfo_OracleListResponse.Size(m)
}
func (m *OracleListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OracleListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OracleListResponse proto.InternalMessageInfo

func (m *OracleListResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *OracleListResponse) GetPages() uint64 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *OracleListResponse) GetOracles() []*Oracle {
	if m != nil {
		return m.Oracles
	}
	return nil
}

type FindResponse struct {
	Success              bool      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Records              []*Record `protobuf:"bytes,3,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FindResponse) Reset()         { *m = FindResponse{} }
func (m *FindResponse) String() string { return proto.CompactTextString(m) }
func (*FindResponse) ProtoMessage()    {}
func (*FindResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{7}
}

func (m *FindResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindResponse.Unmarshal(m, b)
}
func (m *FindResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindResponse.Marshal(b, m, deterministic)
}
func (m *FindResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindResponse.Merge(m, src)
}
func (m *FindResponse) XXX_Size() int {
	return xxx_messageInfo_FindResponse.Size(m)
}
func (m *FindResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindResponse proto.InternalMessageInfo

func (m *FindResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *FindResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *FindResponse) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

type Oracle struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Oracle) Reset()         { *m = Oracle{} }
func (m *Oracle) String() string { return proto.CompactTextString(m) }
func (*Oracle) ProtoMessage()    {}
func (*Oracle) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{8}
}

func (m *Oracle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oracle.Unmarshal(m, b)
}
func (m *Oracle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oracle.Marshal(b, m, deterministic)
}
func (m *Oracle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oracle.Merge(m, src)
}
func (m *Oracle) XXX_Size() int {
	return xxx_messageInfo_Oracle.Size(m)
}
func (m *Oracle) XXX_DiscardUnknown() {
	xxx_messageInfo_Oracle.DiscardUnknown(m)
}

var xxx_messageInfo_Oracle proto.InternalMessageInfo

func (m *Oracle) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Oracle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Oracle) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type OracleResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Oracle               *Oracle  `protobuf:"bytes,3,opt,name=oracle,proto3" json:"oracle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OracleResponse) Reset()         { *m = OracleResponse{} }
func (m *OracleResponse) String() string { return proto.CompactTextString(m) }
func (*OracleResponse) ProtoMessage()    {}
func (*OracleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{9}
}

func (m *OracleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OracleResponse.Unmarshal(m, b)
}
func (m *OracleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OracleResponse.Marshal(b, m, deterministic)
}
func (m *OracleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OracleResponse.Merge(m, src)
}
func (m *OracleResponse) XXX_Size() int {
	return xxx_messageInfo_OracleResponse.Size(m)
}
func (m *OracleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OracleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OracleResponse proto.InternalMessageInfo

func (m *OracleResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *OracleResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *OracleResponse) GetOracle() *Oracle {
	if m != nil {
		return m.Oracle
	}
	return nil
}

type Call struct {
	OracleId             uint64   `protobuf:"varint,1,opt,name=oracle_id,json=oracleId,proto3" json:"oracle_id,omitempty"`
	Args                 []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{10}
}

func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (m *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(m, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetOracleId() uint64 {
	if m != nil {
		return m.OracleId
	}
	return 0
}

func (m *Call) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type Data struct {
	Compressed           bool     `protobuf:"varint,1,opt,name=compressed,proto3" json:"compressed,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{11}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetCompressed() bool {
	if m != nil {
		return m.Compressed
	}
	return false
}

func (m *Data) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type CallResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data                 *Data    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallResponse) Reset()         { *m = CallResponse{} }
func (m *CallResponse) String() string { return proto.CompactTextString(m) }
func (*CallResponse) ProtoMessage()    {}
func (*CallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{12}
}

func (m *CallResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallResponse.Unmarshal(m, b)
}
func (m *CallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallResponse.Marshal(b, m, deterministic)
}
func (m *CallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallResponse.Merge(m, src)
}
func (m *CallResponse) XXX_Size() int {
	return xxx_messageInfo_CallResponse.Size(m)
}
func (m *CallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CallResponse proto.InternalMessageInfo

func (m *CallResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CallResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *CallResponse) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type ById struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ById) Reset()         { *m = ById{} }
func (m *ById) String() string { return proto.CompactTextString(m) }
func (*ById) ProtoMessage()    {}
func (*ById) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{13}
}

func (m *ById) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ById.Unmarshal(m, b)
}
func (m *ById) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ById.Marshal(b, m, deterministic)
}
func (m *ById) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ById.Merge(m, src)
}
func (m *ById) XXX_Size() int {
	return xxx_messageInfo_ById.Size(m)
}
func (m *ById) XXX_DiscardUnknown() {
	xxx_messageInfo_ById.DiscardUnknown(m)
}

var xxx_messageInfo_ById proto.InternalMessageInfo

func (m *ById) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ByName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByName) Reset()         { *m = ByName{} }
func (m *ByName) String() string { return proto.CompactTextString(m) }
func (*ByName) ProtoMessage()    {}
func (*ByName) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{14}
}

func (m *ByName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByName.Unmarshal(m, b)
}
func (m *ByName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByName.Marshal(b, m, deterministic)
}
func (m *ByName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByName.Merge(m, src)
}
func (m *ByName) XXX_Size() int {
	return xxx_messageInfo_ByName.Size(m)
}
func (m *ByName) XXX_DiscardUnknown() {
	xxx_messageInfo_ByName.DiscardUnknown(m)
}

var xxx_messageInfo_ByName proto.InternalMessageInfo

func (m *ByName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ByAddr struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	CertFile             string   `protobuf:"bytes,2,opt,name=cert_file,json=certFile,proto3" json:"cert_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByAddr) Reset()         { *m = ByAddr{} }
func (m *ByAddr) String() string { return proto.CompactTextString(m) }
func (*ByAddr) ProtoMessage()    {}
func (*ByAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{15}
}

func (m *ByAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByAddr.Unmarshal(m, b)
}
func (m *ByAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByAddr.Marshal(b, m, deterministic)
}
func (m *ByAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByAddr.Merge(m, src)
}
func (m *ByAddr) XXX_Size() int {
	return xxx_messageInfo_ByAddr.Size(m)
}
func (m *ByAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_ByAddr.DiscardUnknown(m)
}

var xxx_messageInfo_ByAddr proto.InternalMessageInfo

func (m *ByAddr) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ByAddr) GetCertFile() string {
	if m != nil {
		return m.CertFile
	}
	return ""
}

type ByMeta struct {
	Meta                 string   `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByMeta) Reset()         { *m = ByMeta{} }
func (m *ByMeta) String() string { return proto.CompactTextString(m) }
func (*ByMeta) ProtoMessage()    {}
func (*ByMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{16}
}

func (m *ByMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByMeta.Unmarshal(m, b)
}
func (m *ByMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByMeta.Marshal(b, m, deterministic)
}
func (m *ByMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByMeta.Merge(m, src)
}
func (m *ByMeta) XXX_Size() int {
	return xxx_messageInfo_ByMeta.Size(m)
}
func (m *ByMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ByMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ByMeta proto.InternalMessageInfo

func (m *ByMeta) GetMeta() string {
	if m != nil {
		return m.Meta
	}
	return ""
}

func (m *ByMeta) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ServerInfo struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Os                   string   `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	Arch                 string   `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"`
	GoVersion            string   `protobuf:"bytes,4,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`
	Cpus                 uint64   `protobuf:"varint,5,opt,name=cpus,proto3" json:"cpus,omitempty"`
	MaxCpus              uint64   `protobuf:"varint,6,opt,name=max_cpus,json=maxCpus,proto3" json:"max_cpus,omitempty"`
	Goroutines           uint64   `protobuf:"varint,7,opt,name=goroutines,proto3" json:"goroutines,omitempty"`
	Alloc                uint64   `protobuf:"varint,8,opt,name=alloc,proto3" json:"alloc,omitempty"`
	Sys                  uint64   `protobuf:"varint,9,opt,name=sys,proto3" json:"sys,omitempty"`
	NumGc                uint64   `protobuf:"varint,10,opt,name=num_gc,json=numGc,proto3" json:"num_gc,omitempty"`
	Datapath             string   `protobuf:"bytes,11,opt,name=datapath,proto3" json:"datapath,omitempty"`
	Credspath            string   `protobuf:"bytes,12,opt,name=credspath,proto3" json:"credspath,omitempty"`
	Address              string   `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	Uptime               uint64   `protobuf:"varint,14,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Pid                  uint64   `protobuf:"varint,15,opt,name=pid,proto3" json:"pid,omitempty"`
	Uid                  uint64   `protobuf:"varint,16,opt,name=uid,proto3" json:"uid,omitempty"`
	Argv                 []string `protobuf:"bytes,17,rep,name=argv,proto3" json:"argv,omitempty"`
	Records              uint64   `protobuf:"varint,18,opt,name=records,proto3" json:"records,omitempty"`
	Oracles              uint64   `protobuf:"varint,19,opt,name=oracles,proto3" json:"oracles,omitempty"`
	Backend              string   `protobuf:"bytes,20,opt,name=backend,proto3" json:"backend,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfo) Reset()         { *m = ServerInfo{} }
func (m *ServerInfo) String() string { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()    {}
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{17}
}

func (m *ServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfo.Unmarshal(m, b)
}
func (m *ServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfo.Marshal(b, m, deterministic)
}
func (m *ServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfo.Merge(m, src)
}
func (m *ServerInfo) XXX_Size() int {
	return xxx_messageInfo_ServerInfo.Size(m)
}
func (m *ServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfo proto.InternalMessageInfo

func (m *ServerInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ServerInfo) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *ServerInfo) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *ServerInfo) GetGoVersion() string {
	if m != nil {
		return m.GoVersion
	}
	return ""
}

func (m *ServerInfo) GetCpus() uint64 {
	if m != nil {
		return m.Cpus
	}
	return 0
}

func (m *ServerInfo) GetMaxCpus() uint64 {
	if m != nil {
		return m.MaxCpus
	}
	return 0
}

func (m *ServerInfo) GetGoroutines() uint64 {
	if m != nil {
		return m.Goroutines
	}
	return 0
}

func (m *ServerInfo) GetAlloc() uint64 {
	if m != nil {
		return m.Alloc
	}
	return 0
}

func (m *ServerInfo) GetSys() uint64 {
	if m != nil {
		return m.Sys
	}
	return 0
}

func (m *ServerInfo) GetNumGc() uint64 {
	if m != nil {
		return m.NumGc
	}
	return 0
}

func (m *ServerInfo) GetDatapath() string {
	if m != nil {
		return m.Datapath
	}
	return ""
}

func (m *ServerInfo) GetCredspath() string {
	if m != nil {
		return m.Credspath
	}
	return ""
}

func (m *ServerInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ServerInfo) GetUptime() uint64 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *ServerInfo) GetPid() uint64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ServerInfo) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ServerInfo) GetArgv() []string {
	if m != nil {
		return m.Argv
	}
	return nil
}

func (m *ServerInfo) GetRecords() uint64 {
	if m != nil {
		return m.Records
	}
	return 0
}

func (m *ServerInfo) GetOracles() uint64 {
	if m != nil {
		return m.Oracles
	}
	return 0
}

func (m *ServerInfo) GetBackend() string {
	if m != nil {
		return m.Backend
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_33af41ac7b8d43b1, []int{18}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Node)(nil), "sum.Node")
	proto.RegisterType((*NodeResponse)(nil), "sum.NodeResponse")
	proto.RegisterType((*Record)(nil), "sum.Record")
	proto.RegisterMapType((map[string]string)(nil), "sum.Record.MetaEntry")
	proto.RegisterType((*RecordResponse)(nil), "sum.RecordResponse")
	proto.RegisterType((*ListRequest)(nil), "sum.ListRequest")
	proto.RegisterType((*RecordListResponse)(nil), "sum.RecordListResponse")
	proto.RegisterType((*OracleListResponse)(nil), "sum.OracleListResponse")
	proto.RegisterType((*FindResponse)(nil), "sum.FindResponse")
	proto.RegisterType((*Oracle)(nil), "sum.Oracle")
	proto.RegisterType((*OracleResponse)(nil), "sum.OracleResponse")
	proto.RegisterType((*Call)(nil), "sum.Call")
	proto.RegisterType((*Data)(nil), "sum.Data")
	proto.RegisterType((*CallResponse)(nil), "sum.CallResponse")
	proto.RegisterType((*ById)(nil), "sum.ById")
	proto.RegisterType((*ByName)(nil), "sum.ByName")
	proto.RegisterType((*ByAddr)(nil), "sum.ByAddr")
	proto.RegisterType((*ByMeta)(nil), "sum.ByMeta")
	proto.RegisterType((*ServerInfo)(nil), "sum.ServerInfo")
	proto.RegisterType((*Empty)(nil), "sum.Empty")
}

func init() { proto.RegisterFile("proto/sum.proto", fileDescriptor_33af41ac7b8d43b1) }

var fileDescriptor_33af41ac7b8d43b1 = []byte{
	// 1061 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x6d, 0x6f, 0x1b, 0x45,
	0x10, 0x8e, 0xed, 0xf3, 0xcb, 0x8d, 0x4d, 0x92, 0x6e, 0xd3, 0x72, 0x98, 0xb6, 0x44, 0x57, 0x55,
	0x32, 0x02, 0xa5, 0xc8, 0x7c, 0x68, 0x55, 0x21, 0xd1, 0x36, 0x6d, 0x91, 0x25, 0x9a, 0xa0, 0x8b,
	0x00, 0x21, 0x3e, 0x58, 0xdb, 0xdb, 0x8d, 0x73, 0xea, 0xbd, 0xb1, 0x7b, 0x67, 0xd5, 0xff, 0x82,
	0xef, 0xfc, 0x22, 0x7e, 0x0a, 0xff, 0x02, 0xcd, 0xec, 0xae, 0x7b, 0x26, 0x89, 0x48, 0xd3, 0x6f,
	0xf3, 0xb2, 0xfb, 0xcc, 0x33, 0xb3, 0x33, 0x73, 0x07, 0x3b, 0xa5, 0x2a, 0xaa, 0xe2, 0xa1, 0xae,
	0xb3, 0x03, 0x92, 0x58, 0x47, 0xd7, 0x59, 0x78, 0x0c, 0xde, 0x51, 0x21, 0x24, 0xdb, 0x86, 0x76,
	0x22, 0x82, 0xd6, 0x7e, 0x6b, 0xe2, 0x45, 0xed, 0x44, 0x30, 0x06, 0x5e, 0xce, 0x33, 0x19, 0xb4,
	0xf7, 0x5b, 0x13, 0x3f, 0x22, 0x99, 0xdd, 0x07, 0x2f, 0xc9, 0x4f, 0x8b, 0xa0, 0xb3, 0xdf, 0x9a,
	0x0c, 0xa7, 0x3b, 0x07, 0x08, 0x75, 0x22, 0xd5, 0x52, 0xaa, 0x59, 0x7e, 0x5a, 0x44, 0xe4, 0x0c,
	0x7f, 0x87, 0x11, 0x02, 0x46, 0x52, 0x97, 0x45, 0xae, 0x25, 0x0b, 0xa0, 0xaf, 0xeb, 0x38, 0x96,
	0x5a, 0x13, 0xfa, 0x20, 0x72, 0x2a, 0xdb, 0x85, 0x4e, 0xa6, 0x17, 0x36, 0x02, 0x8a, 0xec, 0x0b,
	0xe8, 0xe6, 0x85, 0x90, 0x3a, 0xe8, 0xec, 0x77, 0x26, 0xc3, 0xa9, 0x4f, 0x11, 0x08, 0xcd, 0xd8,
	0xc3, 0x3f, 0x5b, 0xd0, 0x8b, 0x64, 0x5c, 0x28, 0x71, 0x11, 0x61, 0xc1, 0x2b, 0x1e, 0xb4, 0xf7,
	0x3b, 0x93, 0x76, 0x44, 0x32, 0xfb, 0x12, 0xbc, 0x4c, 0x56, 0xdc, 0xc2, 0xdd, 0x22, 0x38, 0x73,
	0xfd, 0xe0, 0xb5, 0xac, 0xf8, 0xcb, 0xbc, 0x52, 0xab, 0x88, 0x8e, 0x8c, 0x1f, 0x81, 0xbf, 0x36,
	0x21, 0xb3, 0xb7, 0x72, 0x45, 0xe0, 0x7e, 0x84, 0x22, 0xdb, 0x83, 0xee, 0x92, 0xa7, 0xb5, 0xab,
	0x87, 0x51, 0x9e, 0xb4, 0x1f, 0xb7, 0x42, 0x0e, 0xdb, 0x06, 0xf2, 0x5a, 0x19, 0xdf, 0x87, 0x9e,
	0xa2, 0xdb, 0xb6, 0xa8, 0xc3, 0x06, 0xc7, 0xc8, 0xba, 0xc2, 0xef, 0x60, 0xf8, 0x63, 0xa2, 0xab,
	0x48, 0xfe, 0x51, 0x4b, 0x5d, 0x61, 0xa6, 0x25, 0x5f, 0x48, 0x9b, 0x3b, 0xc9, 0xec, 0x33, 0x18,
	0x94, 0x52, 0xcd, 0xc9, 0xde, 0x26, 0x7b, 0xbf, 0x94, 0xea, 0x27, 0xbe, 0x90, 0xe1, 0x02, 0x98,
	0xc1, 0x33, 0x18, 0x96, 0xe4, 0x1e, 0x74, 0xab, 0xa2, 0xe2, 0xa9, 0x45, 0x31, 0x0a, 0x5a, 0x11,
	0x42, 0x5b, 0x0c, 0xa3, 0xb0, 0x07, 0xd0, 0x37, 0x4c, 0xdc, 0xc3, 0x6c, 0xb0, 0x74, 0x3e, 0x0c,
	0x74, 0xac, 0x78, 0x9c, 0xca, 0x8f, 0x09, 0x54, 0x10, 0xc2, 0x66, 0x20, 0x83, 0x1a, 0x39, 0x5f,
	0xc8, 0x61, 0xf4, 0x2a, 0xc9, 0xaf, 0x57, 0xf0, 0x2b, 0xe6, 0xf2, 0x14, 0x7a, 0x26, 0xea, 0x95,
	0x06, 0x83, 0x81, 0x17, 0x17, 0x42, 0xd2, 0x1b, 0xfa, 0x11, 0xc9, 0xd8, 0x17, 0x96, 0xf7, 0x35,
	0xfb, 0xc2, 0x64, 0xbb, 0xd1, 0x17, 0x16, 0xd0, 0xba, 0xc2, 0x47, 0xe0, 0x1d, 0xf2, 0x34, 0x65,
	0x9f, 0x83, 0x6f, 0x2c, 0xf3, 0x35, 0xd3, 0x81, 0x31, 0xcc, 0x88, 0x2f, 0x57, 0x0b, 0x4d, 0x73,
	0xe1, 0x47, 0x24, 0x87, 0x4f, 0xc1, 0x7b, 0x81, 0xf3, 0x71, 0x0f, 0x20, 0x2e, 0xb2, 0x52, 0x49,
	0xad, 0xa5, 0xb0, 0xa4, 0x1a, 0x16, 0x64, 0x5c, 0xf2, 0x55, 0x5a, 0x70, 0x41, 0xdc, 0x46, 0x91,
	0x53, 0xc3, 0xdf, 0x60, 0x84, 0xa1, 0xaf, 0x95, 0xdb, 0x5d, 0x3b, 0xa9, 0x26, 0x33, 0x33, 0xe4,
	0x48, 0xc7, 0x0c, 0x6d, 0x78, 0x1b, 0xbc, 0xe7, 0xab, 0xd9, 0xb9, 0x01, 0x0f, 0xef, 0x40, 0xef,
	0xf9, 0xea, 0xc8, 0x96, 0x9b, 0x9e, 0xa0, 0xf5, 0xfe, 0x09, 0xc2, 0xef, 0xd1, 0xfb, 0x4c, 0x08,
	0x85, 0x54, 0xb8, 0x10, 0xca, 0x51, 0xf1, 0x23, 0xa7, 0x62, 0x9d, 0x62, 0xa9, 0xaa, 0xf9, 0x69,
	0x92, 0xba, 0xf7, 0x1b, 0xa0, 0xe1, 0x55, 0x92, 0xca, 0x70, 0x8a, 0x00, 0xb8, 0x02, 0x10, 0x9e,
	0xb6, 0x86, 0x85, 0x47, 0xf9, 0xe2, 0xf9, 0x0f, 0xff, 0xe9, 0x00, 0xbc, 0x5f, 0x80, 0x18, 0x79,
	0x29, 0x95, 0x4e, 0x8a, 0xdc, 0x45, 0xb6, 0x2a, 0xe6, 0x52, 0x68, 0x7b, 0xb7, 0x5d, 0x68, 0xf3,
	0x28, 0xf1, 0x99, 0x6b, 0x18, 0x94, 0xd9, 0x5d, 0x80, 0x45, 0x31, 0x77, 0x00, 0x1e, 0x79, 0xfc,
	0x45, 0xf1, 0x8b, 0x85, 0xc0, 0x1e, 0x2b, 0x6b, 0x1d, 0x74, 0xcd, 0xd4, 0xa3, 0x8c, 0x53, 0x9f,
	0xf1, 0x77, 0x73, 0xb2, 0xf7, 0xcc, 0xd4, 0x67, 0xfc, 0xdd, 0x21, 0xba, 0xee, 0x21, 0x9a, 0x2a,
	0xea, 0x2a, 0xc9, 0xa5, 0x0e, 0xfa, 0xe4, 0x6c, 0x58, 0x30, 0x21, 0x9e, 0xa6, 0x45, 0x1c, 0x0c,
	0xcc, 0x00, 0x92, 0x82, 0x8f, 0xa5, 0x57, 0x3a, 0xf0, 0xc9, 0x86, 0x22, 0xbb, 0x05, 0xbd, 0xbc,
	0xce, 0xe6, 0x8b, 0x38, 0x00, 0x73, 0x30, 0xaf, 0xb3, 0x1f, 0x62, 0x36, 0x86, 0x01, 0x3e, 0x56,
	0xc9, 0xab, 0xb3, 0x60, 0x68, 0x2a, 0xe9, 0x74, 0x76, 0x07, 0xfc, 0x58, 0x49, 0xa1, 0xc9, 0x39,
	0x32, 0x79, 0xac, 0x0d, 0xcd, 0xe7, 0xf9, 0x64, 0xf3, 0x79, 0x6e, 0x43, 0xaf, 0x2e, 0xab, 0x24,
	0x93, 0xc1, 0x36, 0x85, 0xb2, 0x1a, 0x92, 0x2a, 0x13, 0x11, 0xec, 0x18, 0x52, 0x65, 0x22, 0xd0,
	0x52, 0x27, 0x22, 0xd8, 0x35, 0x96, 0x3a, 0x71, 0x5d, 0xbe, 0x0c, 0x6e, 0xac, 0xbb, 0x7c, 0x89,
	0x91, 0xdc, 0xa8, 0x33, 0x53, 0x1c, 0xab, 0xa2, 0xc7, 0xed, 0x99, 0x9b, 0xc6, 0x63, 0x55, 0xf4,
	0xbc, 0xe1, 0xf1, 0x5b, 0x99, 0x8b, 0x60, 0xcf, 0xb0, 0xb3, 0x6a, 0xd8, 0x87, 0xee, 0xcb, 0xac,
	0xac, 0x56, 0xd3, 0xbf, 0xbb, 0x00, 0x27, 0x75, 0x86, 0xef, 0x9e, 0xc4, 0x92, 0x4d, 0x61, 0x74,
	0xa8, 0x24, 0xaf, 0xa4, 0xfd, 0x2e, 0x35, 0xf7, 0xc9, 0xf8, 0x66, 0x73, 0xb9, 0xd8, 0x59, 0x09,
	0xb7, 0xf0, 0xce, 0xcf, 0xa5, 0xf8, 0xb0, 0x3b, 0x07, 0x00, 0x91, 0xe4, 0xc2, 0xde, 0x30, 0x53,
	0x83, 0x73, 0x72, 0xd9, 0xf9, 0x27, 0xee, 0xa3, 0x61, 0x52, 0xde, 0xa5, 0x53, 0x8d, 0xcf, 0xc8,
	0xf8, 0xd3, 0xc6, 0xbd, 0xe6, 0xc6, 0x0e, 0xb7, 0xd8, 0x37, 0x30, 0x7a, 0x21, 0x53, 0xb9, 0xe6,
	0xf7, 0xff, 0xd1, 0x1e, 0xc2, 0xd0, 0xac, 0x64, 0x13, 0x6d, 0x68, 0x2f, 0xe0, 0x3c, 0x8d, 0x6f,
	0x90, 0xd2, 0xdc, 0xd8, 0xa6, 0x04, 0xa6, 0x6c, 0x76, 0xcd, 0x36, 0x17, 0x9c, 0x0d, 0xb2, 0xb9,
	0x3e, 0x9b, 0x65, 0xfb, 0x80, 0x3b, 0xb6, 0x6c, 0xf6, 0xc6, 0xb9, 0x44, 0xce, 0x9d, 0xb7, 0x65,
	0x3b, 0xb6, 0xfd, 0x70, 0x59, 0xd9, 0xce, 0x7f, 0xe8, 0xa8, 0x6c, 0x80, 0x59, 0x6e, 0xb0, 0x33,
	0x2b, 0xeb, 0xb2, 0x68, 0xeb, 0x42, 0x5f, 0x99, 0xdf, 0x03, 0xe8, 0x44, 0x75, 0x6e, 0x0f, 0xe2,
	0x0a, 0xb6, 0xe5, 0x6d, 0x6e, 0x63, 0x3a, 0xe6, 0xd1, 0x4a, 0x02, 0x72, 0x52, 0xe3, 0x8e, 0xff,
	0xfb, 0xc3, 0x16, 0x6e, 0x4d, 0x8f, 0x80, 0x9d, 0xd4, 0xd9, 0x2c, 0xaf, 0xa4, 0xca, 0x79, 0xea,
	0x5a, 0xfa, 0x31, 0xb0, 0x66, 0x4b, 0xff, 0x9a, 0x54, 0x67, 0xb3, 0x2b, 0x35, 0xe9, 0xf4, 0xaf,
	0x16, 0xec, 0x9e, 0xd4, 0xd9, 0x6b, 0xae, 0x2b, 0xa9, 0x1c, 0xdc, 0x57, 0xd0, 0x7f, 0x26, 0x04,
	0xfd, 0x65, 0xba, 0x9a, 0xe0, 0xa2, 0xb6, 0xc4, 0x9b, 0x3f, 0x8b, 0xe1, 0x16, 0xfb, 0x1a, 0x7c,
	0xac, 0x2a, 0x5a, 0xf5, 0x06, 0xfb, 0x4b, 0x4e, 0x83, 0xa9, 0x1f, 0xa1, 0x37, 0xaa, 0x77, 0xd1,
	0xe9, 0x37, 0x3d, 0xfa, 0xef, 0xfd, 0xf6, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x05, 0xfe,
	0x74, 0x0a, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SumServiceClient is the client API for SumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SumServiceClient interface {
	// vectors CRUD
	CreateRecord(ctx context.Context, in *Record, opts ...grpc.CallOption) (*RecordResponse, error)
	UpdateRecord(ctx context.Context, in *Record, opts ...grpc.CallOption) (*RecordResponse, error)
	ReadRecord(ctx context.Context, in *ById, opts ...grpc.CallOption) (*RecordResponse, error)
	ListRecords(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*RecordListResponse, error)
	DeleteRecord(ctx context.Context, in *ById, opts ...grpc.CallOption) (*RecordResponse, error)
	// find a vector given a meta name and value to filter for
	FindRecords(ctx context.Context, in *ByMeta, opts ...grpc.CallOption) (*FindResponse, error)
	// oracles CRUD
	CreateOracle(ctx context.Context, in *Oracle, opts ...grpc.CallOption) (*OracleResponse, error)
	UpdateOracle(ctx context.Context, in *Oracle, opts ...grpc.CallOption) (*OracleResponse, error)
	ReadOracle(ctx context.Context, in *ById, opts ...grpc.CallOption) (*OracleResponse, error)
	ListOracles(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*OracleListResponse, error)
	FindOracle(ctx context.Context, in *ByName, opts ...grpc.CallOption) (*OracleResponse, error)
	DeleteOracle(ctx context.Context, in *ById, opts ...grpc.CallOption) (*OracleResponse, error)
	// execute a call to a oracle given its id
	Run(ctx context.Context, in *Call, opts ...grpc.CallOption) (*CallResponse, error)
	// get info about the service
	Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServerInfo, error)
}

type sumServiceClient struct {
	cc *grpc.ClientConn
}

func NewSumServiceClient(cc *grpc.ClientConn) SumServiceClient {
	return &sumServiceClient{cc}
}

func (c *sumServiceClient) CreateRecord(ctx context.Context, in *Record, opts ...grpc.CallOption) (*RecordResponse, error) {
	out := new(RecordResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/CreateRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) UpdateRecord(ctx context.Context, in *Record, opts ...grpc.CallOption) (*RecordResponse, error) {
	out := new(RecordResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/UpdateRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) ReadRecord(ctx context.Context, in *ById, opts ...grpc.CallOption) (*RecordResponse, error) {
	out := new(RecordResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/ReadRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) ListRecords(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*RecordListResponse, error) {
	out := new(RecordListResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/ListRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) DeleteRecord(ctx context.Context, in *ById, opts ...grpc.CallOption) (*RecordResponse, error) {
	out := new(RecordResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/DeleteRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) FindRecords(ctx context.Context, in *ByMeta, opts ...grpc.CallOption) (*FindResponse, error) {
	out := new(FindResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/FindRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) CreateOracle(ctx context.Context, in *Oracle, opts ...grpc.CallOption) (*OracleResponse, error) {
	out := new(OracleResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/CreateOracle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) UpdateOracle(ctx context.Context, in *Oracle, opts ...grpc.CallOption) (*OracleResponse, error) {
	out := new(OracleResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/UpdateOracle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) ReadOracle(ctx context.Context, in *ById, opts ...grpc.CallOption) (*OracleResponse, error) {
	out := new(OracleResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/ReadOracle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) ListOracles(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*OracleListResponse, error) {
	out := new(OracleListResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/ListOracles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) FindOracle(ctx context.Context, in *ByName, opts ...grpc.CallOption) (*OracleResponse, error) {
	out := new(OracleResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/FindOracle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) DeleteOracle(ctx context.Context, in *ById, opts ...grpc.CallOption) (*OracleResponse, error) {
	out := new(OracleResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/DeleteOracle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) Run(ctx context.Context, in *Call, opts ...grpc.CallOption) (*CallResponse, error) {
	out := new(CallResponse)
	err := c.cc.Invoke(ctx, "/sum.SumService/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServerInfo, error) {
	out := new(ServerInfo)
	err := c.cc.Invoke(ctx, "/sum.SumService/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SumServiceServer is the server API for SumService service.
type SumServiceServer interface {
	// vectors CRUD
	CreateRecord(context.Context, *Record) (*RecordResponse, error)
	UpdateRecord(context.Context, *Record) (*RecordResponse, error)
	ReadRecord(context.Context, *ById) (*RecordResponse, error)
	ListRecords(context.Context, *ListRequest) (*RecordListResponse, error)
	DeleteRecord(context.Context, *ById) (*RecordResponse, error)
	// find a vector given a meta name and value to filter for
	FindRecords(context.Context, *ByMeta) (*FindResponse, error)
	// oracles CRUD
	CreateOracle(context.Context, *Oracle) (*OracleResponse, error)
	UpdateOracle(context.Context, *Oracle) (*OracleResponse, error)
	ReadOracle(context.Context, *ById) (*OracleResponse, error)
	ListOracles(context.Context, *ListRequest) (*OracleListResponse, error)
	FindOracle(context.Context, *ByName) (*OracleResponse, error)
	DeleteOracle(context.Context, *ById) (*OracleResponse, error)
	// execute a call to a oracle given its id
	Run(context.Context, *Call) (*CallResponse, error)
	// get info about the service
	Info(context.Context, *Empty) (*ServerInfo, error)
}

// UnimplementedSumServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSumServiceServer struct {
}

func (*UnimplementedSumServiceServer) CreateRecord(ctx context.Context, req *Record) (*RecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecord not implemented")
}
func (*UnimplementedSumServiceServer) UpdateRecord(ctx context.Context, req *Record) (*RecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecord not implemented")
}
func (*UnimplementedSumServiceServer) ReadRecord(ctx context.Context, req *ById) (*RecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadRecord not implemented")
}
func (*UnimplementedSumServiceServer) ListRecords(ctx context.Context, req *ListRequest) (*RecordListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRecords not implemented")
}
func (*UnimplementedSumServiceServer) DeleteRecord(ctx context.Context, req *ById) (*RecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRecord not implemented")
}
func (*UnimplementedSumServiceServer) FindRecords(ctx context.Context, req *ByMeta) (*FindResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindRecords not implemented")
}
func (*UnimplementedSumServiceServer) CreateOracle(ctx context.Context, req *Oracle) (*OracleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOracle not implemented")
}
func (*UnimplementedSumServiceServer) UpdateOracle(ctx context.Context, req *Oracle) (*OracleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOracle not implemented")
}
func (*UnimplementedSumServiceServer) ReadOracle(ctx context.Context, req *ById) (*OracleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadOracle not implemented")
}
func (*UnimplementedSumServiceServer) ListOracles(ctx context.Context, req *ListRequest) (*OracleListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOracles not implemented")
}
func (*UnimplementedSumServiceServer) FindOracle(ctx context.Context, req *ByName) (*OracleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOracle not implemented")
}
func (*UnimplementedSumServiceServer) DeleteOracle(ctx context.Context, req *ById) (*OracleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOracle not implemented")
}
func (*UnimplementedSumServiceServer) Run(ctx context.Context, req *Call) (*CallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedSumServiceServer) Info(ctx context.Context, req *Empty) (*ServerInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}

func RegisterSumServiceServer(s *grpc.Server, srv SumServiceServer) {
	s.RegisterService(&_SumService_serviceDesc, srv)
}

func _SumService_CreateRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Record)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).CreateRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/CreateRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).CreateRecord(ctx, req.(*Record))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_UpdateRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Record)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).UpdateRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/UpdateRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).UpdateRecord(ctx, req.(*Record))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_ReadRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).ReadRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/ReadRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).ReadRecord(ctx, req.(*ById))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_ListRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).ListRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/ListRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).ListRecords(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_DeleteRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).DeleteRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/DeleteRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).DeleteRecord(ctx, req.(*ById))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_FindRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByMeta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).FindRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/FindRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).FindRecords(ctx, req.(*ByMeta))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_CreateOracle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Oracle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).CreateOracle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/CreateOracle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).CreateOracle(ctx, req.(*Oracle))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_UpdateOracle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Oracle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).UpdateOracle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/UpdateOracle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).UpdateOracle(ctx, req.(*Oracle))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_ReadOracle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).ReadOracle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/ReadOracle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).ReadOracle(ctx, req.(*ById))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_ListOracles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).ListOracles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/ListOracles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).ListOracles(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_FindOracle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).FindOracle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/FindOracle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).FindOracle(ctx, req.(*ByName))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_DeleteOracle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).DeleteOracle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/DeleteOracle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).DeleteOracle(ctx, req.(*ById))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Call)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).Run(ctx, req.(*Call))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).Info(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sum.SumService",
	HandlerType: (*SumServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRecord",
			Handler:    _SumService_CreateRecord_Handler,
		},
		{
			MethodName: "UpdateRecord",
			Handler:    _SumService_UpdateRecord_Handler,
		},
		{
			MethodName: "ReadRecord",
			Handler:    _SumService_ReadRecord_Handler,
		},
		{
			MethodName: "ListRecords",
			Handler:    _SumService_ListRecords_Handler,
		},
		{
			MethodName: "DeleteRecord",
			Handler:    _SumService_DeleteRecord_Handler,
		},
		{
			MethodName: "FindRecords",
			Handler:    _SumService_FindRecords_Handler,
		},
		{
			MethodName: "CreateOracle",
			Handler:    _SumService_CreateOracle_Handler,
		},
		{
			MethodName: "UpdateOracle",
			Handler:    _SumService_UpdateOracle_Handler,
		},
		{
			MethodName: "ReadOracle",
			Handler:    _SumService_ReadOracle_Handler,
		},
		{
			MethodName: "ListOracles",
			Handler:    _SumService_ListOracles_Handler,
		},
		{
			MethodName: "FindOracle",
			Handler:    _SumService_FindOracle_Handler,
		},
		{
			MethodName: "DeleteOracle",
			Handler:    _SumService_DeleteOracle_Handler,
		},
		{
			MethodName: "Run",
			Handler:    _SumService_Run_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _SumService_Info_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/sum.proto",
}

// SumInternalServiceClient is the client API for SumInternalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SumInternalServiceClient interface {
	CreateRecordWithId(ctx context.Context, in *Record, opts ...grpc.CallOption) (*RecordResponse, error)
}

type sumInternalServiceClient struct {
	cc *grpc.ClientConn
}

func NewSumInternalServiceClient(cc *grpc.ClientConn) SumInternalServiceClient {
	return &sumInternalServiceClient{cc}
}

func (c *sumInternalServiceClient) CreateRecordWithId(ctx context.Context, in *Record, opts ...grpc.CallOption) (*RecordResponse, error) {
	out := new(RecordResponse)
	err := c.cc.Invoke(ctx, "/sum.SumInternalService/CreateRecordWithId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SumInternalServiceServer is the server API for SumInternalService service.
type SumInternalServiceServer interface {
	CreateRecordWithId(context.Context, *Record) (*RecordResponse, error)
}

// UnimplementedSumInternalServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSumInternalServiceServer struct {
}

func (*UnimplementedSumInternalServiceServer) CreateRecordWithId(ctx context.Context, req *Record) (*RecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecordWithId not implemented")
}

func RegisterSumInternalServiceServer(s *grpc.Server, srv SumInternalServiceServer) {
	s.RegisterService(&_SumInternalService_serviceDesc, srv)
}

func _SumInternalService_CreateRecordWithId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Record)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumInternalServiceServer).CreateRecordWithId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumInternalService/CreateRecordWithId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumInternalServiceServer).CreateRecordWithId(ctx, req.(*Record))
	}
	return interceptor(ctx, in, info, handler)
}

var _SumInternalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sum.SumInternalService",
	HandlerType: (*SumInternalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRecordWithId",
			Handler:    _SumInternalService_CreateRecordWithId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/sum.proto",
}

// SumMasterServiceClient is the client API for SumMasterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SumMasterServiceClient interface {
	AddNode(ctx context.Context, in *ByAddr, opts ...grpc.CallOption) (*NodeResponse, error)
	ListNodes(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NodeResponse, error)
	DeleteNode(ctx context.Context, in *ById, opts ...grpc.CallOption) (*NodeResponse, error)
}

type sumMasterServiceClient struct {
	cc *grpc.ClientConn
}

func NewSumMasterServiceClient(cc *grpc.ClientConn) SumMasterServiceClient {
	return &sumMasterServiceClient{cc}
}

func (c *sumMasterServiceClient) AddNode(ctx context.Context, in *ByAddr, opts ...grpc.CallOption) (*NodeResponse, error) {
	out := new(NodeResponse)
	err := c.cc.Invoke(ctx, "/sum.SumMasterService/AddNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumMasterServiceClient) ListNodes(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NodeResponse, error) {
	out := new(NodeResponse)
	err := c.cc.Invoke(ctx, "/sum.SumMasterService/ListNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumMasterServiceClient) DeleteNode(ctx context.Context, in *ById, opts ...grpc.CallOption) (*NodeResponse, error) {
	out := new(NodeResponse)
	err := c.cc.Invoke(ctx, "/sum.SumMasterService/DeleteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SumMasterServiceServer is the server API for SumMasterService service.
type SumMasterServiceServer interface {
	AddNode(context.Context, *ByAddr) (*NodeResponse, error)
	ListNodes(context.Context, *Empty) (*NodeResponse, error)
	DeleteNode(context.Context, *ById) (*NodeResponse, error)
}

// UnimplementedSumMasterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSumMasterServiceServer struct {
}

func (*UnimplementedSumMasterServiceServer) AddNode(ctx context.Context, req *ByAddr) (*NodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNode not implemented")
}
func (*UnimplementedSumMasterServiceServer) ListNodes(ctx context.Context, req *Empty) (*NodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodes not implemented")
}
func (*UnimplementedSumMasterServiceServer) DeleteNode(ctx context.Context, req *ById) (*NodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNode not implemented")
}

func RegisterSumMasterServiceServer(s *grpc.Server, srv SumMasterServiceServer) {
	s.RegisterService(&_SumMasterService_serviceDesc, srv)
}

func _SumMasterService_AddNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByAddr)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumMasterServiceServer).AddNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumMasterService/AddNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumMasterServiceServer).AddNode(ctx, req.(*ByAddr))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumMasterService_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumMasterServiceServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumMasterService/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumMasterServiceServer).ListNodes(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumMasterService_DeleteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumMasterServiceServer).DeleteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumMasterService/DeleteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumMasterServiceServer).DeleteNode(ctx, req.(*ById))
	}
	return interceptor(ctx, in, info, handler)
}

var _SumMasterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sum.SumMasterService",
	HandlerType: (*SumMasterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddNode",
			Handler:    _SumMasterService_AddNode_Handler,
		},
		{
			MethodName: "ListNodes",
			Handler:    _SumMasterService_ListNodes_Handler,
		},
		{
			MethodName: "DeleteNode",
			Handler:    _SumMasterService_DeleteNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/sum.proto",
}
