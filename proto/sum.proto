syntax = "proto3";

package sum;

service SumService {
  // vectors CRUD
  rpc CreateRecord(Record) returns (RecordResponse) {}
  rpc UpdateRecord(Record) returns (RecordResponse) {}
  rpc ReadRecord(ById) returns (RecordResponse) {}
  rpc ListRecords(ListRequest) returns (RecordListResponse) {}
  rpc DeleteRecord(ById) returns (RecordResponse) {}
  // find a vector given a meta name and value to filter for
  rpc FindRecords(ByMeta) returns (FindResponse) {}
  // oracles CRUD
  rpc CreateOracle(Oracle) returns (OracleResponse) {}
  rpc UpdateOracle(Oracle) returns (OracleResponse) {}
  rpc ReadOracle(ById) returns (OracleResponse) {}
  rpc FindOracle(ByName) returns (OracleResponse) {}
  rpc DeleteOracle(ById) returns (OracleResponse) {}
  // execute a call to a oracle given its id
  rpc Run(Call) returns (CallResponse) {}
  // get info about the service
  rpc Info(Empty) returns (ServerInfo) {}
}

message Record {
    uint64 id = 1;
    repeated double data = 2;
    map<string, string> meta = 3;
}

message RecordResponse {
    bool success = 1;
    string msg = 2;
    Record record = 3;
}

message ListRequest {
    uint64 page = 1;
    uint64 per_page = 2;
}

message RecordListResponse {
    uint64 total = 1;
    uint64 pages = 2;
    repeated Record records = 3;
}

message FindResponse {
    bool success = 1;
    string msg = 2;
    repeated Record records = 3;
}

message Oracle {
    uint64 id = 1;
    string name = 2;
    string code = 3;
}

message OracleResponse {
    bool success = 1;
    string msg = 2;
    repeated Oracle oracles = 3;
}

message Call {
    uint64 oracle_id = 1;
    repeated string args = 2;
}

message Data {
   bool compressed = 1;
   bytes payload = 2;
}

message CallResponse {
    bool success = 1;
    string msg = 2;
    Data data = 3;
}

message ById {
    uint64 id = 1;
}

message ByName {
    string name = 1;
}

message ByMeta {
    string meta = 1;
    string value = 2;
}

message ServerInfo {
    string version = 1;
    uint64 uptime  = 2;
    uint64 pid = 3;
    uint64 uid = 4;
    repeated string argv = 5;
    uint64 records = 6;
    uint64 oracles = 7;
}

message Empty {}
